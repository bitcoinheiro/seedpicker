From c00a02d43e9720040f68b3a91aeffcd728286c28 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=B6rgen=20Lundberg?= <jorgen.lundberg@gmail.com>
Date: Tue, 15 Oct 2019 10:02:12 +0200
Subject: [PATCH] Testing error messages

---
 .travis.yml                          |  1 -
 calculator/bundle.js                 | 15 ++++-----------
 features/seedpicker.feature          | 14 ++++++++++++++
 lib/logic.js                         |  4 ++--
 package.json                         |  3 ++-
 step_definitions/seedpicker-steps.js | 20 ++++++++++++++++++--
 6 files changed, 40 insertions(+), 17 deletions(-)

diff --git a/.travis.yml b/.travis.yml
index c67594b..47c082c 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -9,4 +9,3 @@ before_install:
 
 script:
   - npm run test
-  - npm run test:cucumber
diff --git a/calculator/bundle.js b/calculator/bundle.js
index 5ecfb06..e3d883f 100644
--- a/calculator/bundle.js
+++ b/calculator/bundle.js
@@ -32009,7 +32009,7 @@ module.exports={
   "_args": [
     [
       "elliptic@6.5.1",
-      "/Users/jorgen/jobbet/seedpicker"
+      "/Users/jorgen/projects/seedpicker_fork"
     ]
   ],
   "_from": "elliptic@6.5.1",
@@ -32035,7 +32035,7 @@ module.exports={
   ],
   "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.1.tgz",
   "_spec": "6.5.1",
-  "_where": "/Users/jorgen/jobbet/seedpicker",
+  "_where": "/Users/jorgen/projects/seedpicker_fork",
   "author": {
     "name": "Fedor Indutny",
     "email": "fedor@indutny.com"
@@ -52721,7 +52721,7 @@ function validate(suppliedSeedPhrase) {
             .map(word => "'" + word + "'")
             .join(", ")
     if (nonDictionaryWords.length > 0) {
-        const msg = "Words not in dictionary: " + nonDictionaryWords
+        const msg = "Words not in the dictionary: " + nonDictionaryWords
         return validationReply(msg)
     }
     return validationReply("", trimmedWords.join(" "))
@@ -52780,6 +52780,7 @@ module.exports = {
     generateSample: generateSample,
     convertPubkey: convertPubkey
 }
+
 }).call(this,require("buffer").Buffer)
 },{"./xpubformats.js":1,"bip32":"bip32","bip39":"bip39","bs58check":91,"buffer":"buffer"}],"presentation":[function(require,module,exports){
 /**
@@ -52810,14 +52811,6 @@ function init() {
         const $info_color = $('.is-info');
         $info_color.removeClass('is-info');
         $info_color.addClass('has-background-grey');
-
-        // const $hero = $('.hero');
-        // $hero.removeClass('is-info');
-        // $hero.addClass('has-background-grey');
-        //
-        // const $buttons = $('button');
-        // $buttons.removeClass('is-info')
-        // $buttons.addClass('has-background-grey')
     }
     $('.page_heading').text(actualTitle)
     $('head title').text(actualTitle)
diff --git a/features/seedpicker.feature b/features/seedpicker.feature
index 7304004..5c126f9 100644
--- a/features/seedpicker.feature
+++ b/features/seedpicker.feature
@@ -10,6 +10,7 @@ Feature: Seedpicker Calculator
     Then I can see the last word
     And the last word should be "bridge"
     And the Extended Public Key should start with "Zpub"
+    And there should not be an error message
 
   Scenario: Display QR-code for valid phrase
     Given I open the Seedpicker calculator
@@ -33,3 +34,16 @@ Feature: Seedpicker Calculator
     Then I should see the Advanced-section
     And the Advanced button has the text "Show less"
     And I should see the xpub key
+
+  Scenario Outline: Error messages
+    Given I open the Seedpicker calculator
+    When I click the Calculate button
+    Then I can see the error message "Please enter 23 words. (You entered 0)"
+    When I enter the words "<phrase>"
+    And I click the Calculate button
+    Then I can see the error message "<error_message>"
+
+    Examples:
+      | phrase   | error_message |
+      | apa bepa | Please enter 23 words. (You entered 2) |
+      | emppower  soul    reunion  entire  help raise truth  reflect    argue transfer chicken narrow oak friend junior figure auto small  push spike    next pledge decemberr | Words not in the dictionary: 'emppower', 'decemberr' |
diff --git a/lib/logic.js b/lib/logic.js
index caa4b1f..d2c662e 100644
--- a/lib/logic.js
+++ b/lib/logic.js
@@ -73,7 +73,7 @@ function validate(suppliedSeedPhrase) {
             .map(word => "'" + word + "'")
             .join(", ")
     if (nonDictionaryWords.length > 0) {
-        const msg = "Words not in dictionary: " + nonDictionaryWords
+        const msg = "Words not in the dictionary: " + nonDictionaryWords
         return validationReply(msg)
     }
     return validationReply("", trimmedWords.join(" "))
@@ -131,4 +131,4 @@ module.exports = {
     firstFoundLastWord: firstFoundLastWord,
     generateSample: generateSample,
     convertPubkey: convertPubkey
-}
\ No newline at end of file
+}
diff --git a/package.json b/package.json
index 126dcb5..3846dec 100644
--- a/package.json
+++ b/package.json
@@ -24,7 +24,8 @@
   },
   "scripts": {
     "build": "./browserify.sh",
-    "test": "mocha test",
+    "test": "mocha test; cucumber-js --require cucumber.conf.js --require step_definitions --format node_modules/cucumber-pretty",
+    "test:unit": "mocha test",
     "test:cucumber": "cucumber-js --require cucumber.conf.js --require step_definitions --format node_modules/cucumber-pretty"
   },
   "author": "seedpicker@megabit.se",
diff --git a/step_definitions/seedpicker-steps.js b/step_definitions/seedpicker-steps.js
index ca20c2c..74a2bb1 100644
--- a/step_definitions/seedpicker-steps.js
+++ b/step_definitions/seedpicker-steps.js
@@ -43,6 +43,12 @@ Then(/^the Extended Public Key should start with "([^"]*)"$/, word => {
         .expect.element("#extended_pub_result").text
         .to.startWith(word)
 });
+Then(/^there should not be an error message$/, function () {
+    return browser
+        .waitForElementNotVisible("#seed_error_msg")
+        .expect.element("#seed_error_msg")
+        .to.not.be.visible
+});
 When(/^I click the QR-code button$/, () => {
     return browser
         .waitForElementVisible("#qr_code_button", 1000)
@@ -90,7 +96,17 @@ Then(/^I should see the Advanced-section$/, async () => {
     await browser
         .expect.element("#advanced").to.be.visible
 });
-Then(/^I should see the xpub key$/, () => {
-    return browser
+Then(/^I should see the xpub key$/, async () => {
+    await browser
         .expect.element("#xpub_key").to.be.visible
 });
+
+Then(/^I can see the error message "([^"]*)"$/, async errorMessage => {
+    await browser
+        .expect.element("#seed_error_msg")
+        .to.be.visible
+
+    await browser
+        .expect.element("#seed_error_msg").text
+        .to.equal(errorMessage);
+});
-- 
2.19.0

